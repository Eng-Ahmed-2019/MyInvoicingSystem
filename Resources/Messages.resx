<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="CompanyAlreadyExists" xml:space="preserve">
    <value>this company is already exists</value>
  </data>
  <data name="CompanyDescriptionArabicOnly" xml:space="preserve">
    <value>only arabic letters</value>
  </data>
  <data name="CompanyDescriptionEnglishOnly" xml:space="preserve">
    <value>only english letters</value>
  </data>
  <data name="CompanyDescriptionMaxLength" xml:space="preserve">
    <value>Description must not exceed 500 characters.</value>
  </data>
  <data name="CompanyNameArabicOnly" xml:space="preserve">
    <value>only arabic letters</value>
  </data>
  <data name="CompanyNameArRequired " xml:space="preserve">
    <value>Arabic company name is required.</value>
  </data>
  <data name="CompanyNameEnglishOnly" xml:space="preserve">
    <value>Company name must contain English letters only.</value>
  </data>
  <data name="CompanyNameMaxLength" xml:space="preserve">
    <value>Company name must not exceed 150 characters.</value>
  </data>
  <data name="CompanyNameMinLength" xml:space="preserve">
    <value>Company name must be at least 2 characters.</value>
  </data>
  <data name="CompanyNameRequired" xml:space="preserve">
    <value>Company name is required.</value>
  </data>
  <data name="CompanyRequired" xml:space="preserve">
    <value>This Company is required.</value>
  </data>
  <data name="Company_Required" xml:space="preserve">
    <value>Company is required</value>
  </data>
  <data name="CreatedSuccessfully" xml:space="preserve">
    <value>Created successfully.</value>
  </data>
  <data name="CustomerEmailInvalid" xml:space="preserve">
    <value>Invalid email format.</value>
  </data>
  <data name="CustomerExists" xml:space="preserve">
    <value>customer is exists</value>
  </data>
  <data name="CustomerNameArabicRequired" xml:space="preserve">
    <value>Customer Arabic name is required.</value>
  </data>
  <data name="CustomerNameEnglishOnly" xml:space="preserve">
    <value>Customer name must contain English letters only.</value>
  </data>
  <data name="CustomerNameMaxLength" xml:space="preserve">
    <value>Customer name must not exceed 200 characters.</value>
  </data>
  <data name="CustomerNameRequired" xml:space="preserve">
    <value>Customer name is required.</value>
  </data>
  <data name="CustomerNotFound" xml:space="preserve">
    <value>customer not found here</value>
  </data>
  <data name="CustomerPhoneInvalid" xml:space="preserve">
    <value>Invalid phone number.</value>
  </data>
  <data name="Customer_Required" xml:space="preserve">
    <value>Customer is required</value>
  </data>
  <data name="DeletedSuccessfully " xml:space="preserve">
    <value>Deleted successfully.</value>
  </data>
  <data name="DescArArabicOnly" xml:space="preserve">
    <value>Description must contain Arabic only.</value>
  </data>
  <data name="DescEnglishOnly" xml:space="preserve">
    <value>Description must contain English only.</value>
  </data>
  <data name="Description_TooLong" xml:space="preserve">
    <value>Description must be less than 1000 characters</value>
  </data>
  <data name="EmailRequired" xml:space="preserve">
    <value>Email is required</value>
  </data>
  <data name="EnglishLettersOnly" xml:space="preserve">
    <value>This field must contain English letters only</value>
  </data>
  <data name="FullNameArMaxLength" xml:space="preserve">
    <value>Full name in Arabic cannot exceed 100 characters</value>
  </data>
  <data name="FullNameArRequired" xml:space="preserve">
    <value>Full name in Arabic is required</value>
  </data>
  <data name="FullNameMaxLength" xml:space="preserve">
    <value>Full name cannot exceed 100 characters</value>
  </data>
  <data name="FullNameRequired" xml:space="preserve">
    <value>Full name is required</value>
  </data>
  <data name="InvalidCompanyId" xml:space="preserve">
    <value>Company number is invalid</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>Invalid Email Address</value>
  </data>
  <data name="InvoiceItem_DescriptionAr_Invalid" xml:space="preserve">
    <value>Description (Arabic) is invalid.</value>
  </data>
  <data name="InvoiceItem_Description_Invalid" xml:space="preserve">
    <value>Description must contain English letters only</value>
  </data>
  <data name="InvoiceItem_NameAr_Required" xml:space="preserve">
    <value>Arabic name is required.</value>
  </data>
  <data name="InvoiceItem_Name_Invalid" xml:space="preserve">
    <value>This field must contain English letters only.</value>
  </data>
  <data name="InvoiceItem_Name_Required" xml:space="preserve">
    <value>Name is required.</value>
  </data>
  <data name="InvoiceItem_Quantity_Range" xml:space="preserve">
    <value>Quantity must be at least 1</value>
  </data>
  <data name="InvoiceItem_UnitPrice_Range" xml:space="preserve">
    <value>Unit price must be greater than 0.</value>
  </data>
  <data name="InvoiceNumber_Required" xml:space="preserve">
    <value>Invoice number is required</value>
  </data>
  <data name="NameArArabicOnly" xml:space="preserve">
    <value>Item Arabic name must contain Arabic only.</value>
  </data>
  <data name="NameArMaxLength" xml:space="preserve">
    <value>Item Arabic name must not exceed 200 chars.</value>
  </data>
  <data name="NameArRequired" xml:space="preserve">
    <value>Item Arabic name is required.</value>
  </data>
  <data name="NameEnglishOnly" xml:space="preserve">
    <value>Item name must contain English only.</value>
  </data>
  <data name="NameMaxLength" xml:space="preserve">
    <value>Item name must not exceed 200 chars.</value>
  </data>
  <data name="NameRequired" xml:space="preserve">
    <value>Item name is required.</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Not found.</value>
  </data>
  <data name="PasswordRequired" xml:space="preserve">
    <value>Password is required</value>
  </data>
  <data name="PriceRange" xml:space="preserve">
    <value>Unit price must be greater than 0.</value>
  </data>
  <data name="RoleRequired" xml:space="preserve">
    <value>Role is required</value>
  </data>
  <data name="Role_DescriptionAr_MaxLength" xml:space="preserve">
    <value>Description in Arabic cannot exceed 250 characters.</value>
  </data>
  <data name="Role_DescriptionAr_OnlyLetters" xml:space="preserve">
    <value>This field must contain Arabic letters only</value>
  </data>
  <data name="Role_DescriptionEn_MaxLength" xml:space="preserve">
    <value>Description in English cannot exceed 250 characters</value>
  </data>
  <data name="Role_DescriptionEn_OnlyLetters" xml:space="preserve">
    <value>This field must contain English letters only.</value>
  </data>
  <data name="Role_NameAr_MaxLength" xml:space="preserve">
    <value>Arabic name cannot exceed 100 characters</value>
  </data>
  <data name="Role_NameAr_OnlyLetters" xml:space="preserve">
    <value>This field must contain Arabic letters only</value>
  </data>
  <data name="Role_NameAr_Required" xml:space="preserve">
    <value>Arabic name is required</value>
  </data>
  <data name="Role_NameEn_MaxLength" xml:space="preserve">
    <value>English name cannot exceed 100 characters</value>
  </data>
  <data name="Role_NameEn_OnlyLetters" xml:space="preserve">
    <value>This field must contain English letters only</value>
  </data>
  <data name="Role_NameEn_Required" xml:space="preserve">
    <value>English name is required</value>
  </data>
  <data name="Subtotal_Range" xml:space="preserve">
    <value>Subtotal must be greater than or equal to 0</value>
  </data>
  <data name="Tax_Range" xml:space="preserve">
    <value>Tax must be greater than or equal to 0</value>
  </data>
  <data name="TitleAr_Required" xml:space="preserve">
    <value>Arabic title is required</value>
  </data>
  <data name="Title_Required" xml:space="preserve">
    <value>Title is required</value>
  </data>
  <data name="Total_Range" xml:space="preserve">
    <value>Total must be greater than or equal to 0</value>
  </data>
  <data name="UpdatedSuccessfully" xml:space="preserve">
    <value>Updated successfully.</value>
  </data>
  <data name="UsernameMaxLength" xml:space="preserve">
    <value>Username cannot be longer than 50 characters</value>
  </data>
  <data name="UsernameRequired" xml:space="preserve">
    <value>Username is required</value>
  </data>
  <data name="ArabicLettersOnly" xml:space="preserve">
    <value>This field must contain Arabic letters only</value>
  </data>
  <data name="InvoiceNotFound" xml:space="preserve">
    <value>This invoice not found</value>
  </data>
  <data name="InvalidRequest" xml:space="preserve">
    <value>this request is invalid</value>
  </data>
  <data name="InvoiceItemNotFound" xml:space="preserve">
    <value>invoice item is not found</value>
  </data>
  <data name="InvoiceItemsCreated" xml:space="preserve">
    <value>this item created successfully</value>
  </data>
  <data name="ItemExists" xml:space="preserve">
    <value>An item with the same name already exists</value>
  </data>
  <data name="ItemNotFound" xml:space="preserve">
    <value>Item not found for your company.</value>
  </data>
  <data name="AnotherItemExists" xml:space="preserve">
    <value>Another item with the same name already exists.</value>
  </data>
  <data name="RoleDeleted" xml:space="preserve">
    <value>This role is deleted</value>
  </data>
  <data name="RoleUpdated" xml:space="preserve">
    <value>This role was updated</value>
  </data>
  <data name="RoleCreated" xml:space="preserve">
    <value>Role was created</value>
  </data>
  <data name="RoleNotFound" xml:space="preserve">
    <value>This role not found</value>
  </data>
  <data name="UserNotFound" xml:space="preserve">
    <value>This user is not found</value>
  </data>
  <data name="CompanyIdMissing" xml:space="preserve">
    <value>Company id not found</value>
  </data>
  <data name="UserConflict" xml:space="preserve">
    <value>This user is conflict with another user</value>
  </data>
  <data name="UserExists" xml:space="preserve">
    <value>This user is exists</value>
  </data>
</root>